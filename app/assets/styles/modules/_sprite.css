/*
The gulp svg sprites package uses the mustache template system
meaning any code included within double braces
                
                ' ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE  ACTUAL CODE '

will be looped through for each icon

(I guess here, 'shapes' is the special keyword used by svg sprites to reference
all shapes and iterate through them here...)

Note that in that file, we will use several variables that seem to come from nowhere
They actually come from the gulp svg sprite package!!
All the info on these variables are at the official GitHub documentation:
https://github.com/jkphl/svg-sprite/blob/master/docs/templating.md

The final processed file (after decoding this file's content) is at:
'./app/temp/sprite/css/sprite.css'
*/


        /*
        First, the code put between 
                ' ACTUAL CODE '
        will only be repeated for the first item of the sequence

        This creates a base 'icon' class that has a 'background-image' attribute
        so that this exact same background image corresponding to the same sprite file
        is not repeated over and over so we avoid having for each icons
        something like that:
        icon--star{
            ...
            background-image: url('xyz.svg');
        }
        icon--clear-view-escapes{
            ...
            background-image: url('xyz.svg');
        }
        Instead, we will have:
        .icon
        {
           background-image: url('xyz.svg'); 
        }
        then:
        .icon--star{
            ...
        }
        .icon--clear-view-escapes{
            ...
        }

        We just provide a URL path that points to the svg sprite file
        The 'sprite' variable is responsible for going into the svg folder
        and selecting the sprite file

        The reason we used a variable instead of a hardcoded path is
        because svg sprites tends to add a bunch of randomly generated characters
        to the 'sprite.css' like that: 'sprite.css-69f19c2e.svg'
        everytime a new sprite is generated

        Notice that we used TRIPLE braces, this is because the path contains
        forward slashes and forward slashes are escaped when whitin double braces
        As we do not want them to be escaped, we use TRIPLE slashes to specify the
        variable containing slashes to be as it is
        */
        .icon{
            background-image: url('/assets/images/sprites/sprite-e79e95cc.svg');
        }

        /*
        Here, we want the PNG copy to be applied
        For that, we will create a filter function we choose to call
        'replaceSvgWithPng' that will either select,
        the SVG or the PNG version depending on browser support in the 'config'
        object of the 'gulp/tasks/sprites.js'
        We will actually call that function in the 'url' path argument,
        more precisely, we will wrap the sprite-e79e95cc.svg variable
        within our filter function
        To do that, we need to enclose the sprite variable with the following syntax:
        
        */
        .no-svg .icon{
            background-image: url('/assets/images/sprites/sprite-e79e95cc.png');
        }
    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--clear-view-escapes {
        width: 144.4px;
        height: 61.53px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 0 0;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--comment {
        width: 66px;
        height: 66px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 99.71014492753623% 0;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--facebook {
        width: 23.23px;
        height: 44.01px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 26.424310365536293% 45.92133741323979%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--fire {
        width: 58px;
        height: 66px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 0 99.58035714285714%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--globe {
        width: 66px;
        height: 66px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 28.019323671497585% 99.58035714285714%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--instagram {
        width: 44.01px;
        height: 44.01px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 63.059522249879905% 49.25740726919919%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--mail {
        width: 66px;
        height: 50px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 0 48.0703125%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--rain {
        width: 66px;
        height: 66px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 99.71014492753623% 58.92857142857143%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--star {
        width: 66px;
        height: 66px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 59.90338164251208% 99.58035714285714%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--twitter {
        width: 53.78px;
        height: 44.06px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 94.15199343125627% 98.55159026429745%;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--wifi {
        width: 62px;
        height: 66px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 68.43601895734596% 0;
    }

    /*
    We create a new CSS rule here i guess, one per icon (since we loop)
    Each icon has its name, height and width specified automatically
    */
    .icon--youtube {
        width: 36.75px;
        height: 44px;
        /*
        That 'background-position' is here to tell each icon its own unique
        X and Y coordinates on the sprite file
        */
        background-position: 37.76931216931217% 45.917910447761194%;
    }
